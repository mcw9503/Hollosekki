<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper"> 

<!--Common-공용 -->
	<update id="updateStatus">
<!-- 	dataType 	1 : 식품 -->
<!-- 				2 : 식단 -->
<!-- 				3 : 식재료 -->
<!-- 				4 : 주방도구  -->
<!-- 				5 : 회원  -->
<!-- 				6 : 레시피  -->
<!-- 				7 : 리뷰(Review) -->
<!-- 				8 : 게시판(Board) -->
<!-- 				9 : faq -->
<!-- 				10 : qna -->
		<if test="dataType == 1 or dataType == 2 or dataType == 3 or dataType == 4">
			update product
			set product_status = #{dataStatus}
			where product_type = #{dataType} 
				  and product_no = #{dataNo}
		</if>
		<if test="dataType == 5">
			update users
			set status = #{dataStatus}
			where users_no = #{dataNo}
		</if>
		<if test="dataType == 6">
			update recipe
			set recipe_status = #{dataStatus}
			where food_no = #{dataNo}
		</if>
		<if test="dataType == 7">
			update review
			set review_status = #{dataStatus}
			where review_no = #{dataNo}
		</if>
		<if test="dataType == 8">
			update board
			set board_status = #{dataStatus}
			where board_no = #{dataNo}
		</if>
		<if test="dataType == 9">
			update faq
			set faq_status = #{dataStatus}
			where faq_no = #{dataNo}
		</if>
		<if test="dataType == 10">
			update qna
			set qna_status = #{dataStatus}
			where qna_no = #{dataNo}
		</if>
	</update>
	
	<delete id="deleteSelects">
<!-- 	type	-->
<!-- 	1 : 식품 -->
<!-- 	2 : 식단 -->
<!-- 	3 : 식재료 -->
<!-- 	4 : 주방도구  -->
<!-- 	5 : 상품  -->
<!-- 	6 : 레시피  -->
<!-- 	7 : 리뷰(Review) -->
<!-- 	8 : 게시판(Board) -->
<!-- 	9 : FAQ -->
<!-- 	10 : QNA -->
<!-- 4-1 : options 추가 요망 -->
<!-- 6-1 : recipe_order 추가 요망 -->
<!-- 6-2 : recipe_element 추가 요망 -->

		<if test="type == 1">delete food 		where product_no in</if>
		<if test="type == 2">delete menu 		where product_no in</if>
		<if test="type == 3">delete ingredient 	where ingredient_no in</if>
		<if test="type == 4">delete tool 		where product_no in</if>
		<if test="type == 5">delete product 	where product_no in</if>
		<if test="type == 6">delete recipe 		where food_no in</if>
		<if test="type == 7">delete review 		where review_no in</if>
		<if test="type == 8">delete board 		where board_no in</if>
		<if test="type == 9">delete faq			where faq_no in</if>
		<if test="type == 10">delete qna		where qna_no in</if>
		<foreach collection="selDeletes" item="item" open="(" separator="," close=")">
			${item}
		</foreach>
	</delete>
	
	<insert id="insertOptions">
		insert into options(option_no, product_no, option_name, option_value)
		values(seq_option_no.nextval, #{productNo}, #{optionName}, #{optionValue})
	</insert>

	<delete id="deleteOptions">
		delete options
		where product_no = #{pNo}
	</delete>	

	<select id="selectOptions" resultMap="optionsResultSet">
		select *
		from (select *
			  from options
			  order by option_no)
		where product_no = #{pNo}
	</select>


<!--Product-상품 -->
	<select id="selectProduct" resultMap="productResultSet">
		select *
		from product
		where product_no = #{pNo} 
	</select>
	
	<update id="updateProduct">
		update product
		set product_price = #{productPrice},
			product_option = #{productOption},
			product_stock = #{productStock},
			product_modify_date = sysdate,
			product_sale = #{productSale},
			product_status = #{productStatus}
		where product_no = #{productNo} 
	</update>
	
	<insert id="insertProduct">
		insert into product(product_no, product_type, product_price, product_option, product_stock, 
			product_create_date, product_modify_date, product_sale, product_count, product_status, users_no)
		values(seq_product_no.nextval, #{productType}, #{productPrice},
			#{productOption}, #{productStock}, sysdate, sysdate, #{productSale}, default, default, #{usersNo})
		<selectKey keyProperty="productNo" resultType="int" order="AFTER">
    		SELECT seq_product_no.currval from dual
    	</selectKey>
	</insert>
	
	<select id="selectProductCount" resultType="_int">
		<if test="type == 1">
			select count(*)
			from orders
			     join product using(product_no)
			where product_no = ${pNo}
		</if>
		<if test="type == 2">
			select count(*)
			from likes
			where number_type = 2
			      and division_no = ${pNo}
		</if>
	</select>

<!--Image-사진 -->
	<select id="selectAllImageList" resultMap="imageResultSet">
		select *
		from (select *
			  from image
			  order by image_no asc)	
		where image_divide_no = #{imageDivideNo} and image_type = #{imageType}
		<if test="imageLevel != -1">
			  and image_level = #{imageLevel}
		</if>
	</select>
	
	<insert id="insertImage">
		insert into image(image_no, image_divide_no, image_type, image_originalname, image_renamename, image_path, image_level)
		values(seq_image_no.nextval, #{imageDivideNo}, #{imageType}, #{imageOriginalName}, #{imageRenameName}, #{imagePath}, #{imageLevel})
	</insert>
	
	<delete id="deleteImage">
		delete image
		where image_type = #{imageType} and image_divide_no = ${imageDivideNo} 
		<if test="imageLevel != null">
			and image_level = #{imageLevel}
		</if>
	</delete>

<!--AdminMain-관리자 메인화면 -->
	<select id="selectAdminMainList" resultMap="adminMainResultSet">
		<if test="type == 1">
			select *
			from(select substr(order_date,0,8) as day, sum(order_total_price) as order_day_sales, count(*) as order_day_count
				 from orders
				 group by substr(order_date,0,8)
				 order by substr(order_date,0,8) desc)
			where rownum &lt;= 7
		</if>
		<if test="type == 2">
			select * 
			from(select substr(recipe_create_date, 0, 8) as day, count(*) as recipe_day_count
				 from recipe
				 group by substr(recipe_create_date, 0, 8)
				 order by substr(recipe_create_date, 0, 8) desc)
			where rownum &lt;= 7
		</if>
		<if test="type == 3">
			select *
			from(select substr(enroll_date, 0, 8) as day, count(*) as enroll_day_count
				 from users
				 group by substr(enroll_date, 0, 8)
			 	 order by substr(enroll_date, 0, 8) desc)
			where rownum &lt;= 7
		</if>
		<if test="type == 4">
			select *
			from(select substr(order_date, 0, 8) as day, count(*) as menu_day_count
				 from (select *
				 	   from orders
				 	   where product_type = 2)
				 group by substr(order_date, 0, 8)
			 	 order by substr(order_date, 0, 8) desc)
			where rownum &lt;= 7
		</if>
		
	</select>



<!--Sales 매출 -->
	<select id="getSalesCount" resultType="_int">
		<if test="kind == null">
			select count(*)
			from(select substr(order_date,0,8)
				from orders
				group by substr(order_date,0,8)
				order by substr(order_date,0,8) desc)
		</if>
		<if test="kind == 1">
			select count(*)
			from(select substr(order_date,0,5)
				from orders
				group by substr(order_date,0,5)
				order by substr(order_date,0,5) desc)
		</if>
	</select>
	<select id="selectSalesList" resultMap="salesResultSet">
<!-- 	kind == null	일일 매출 -->
<!-- 	kind == 1		월 매출 -->
<!-- 		<if test="number != null"> -->
<!-- 			select * -->
<!-- 			from( -->
<!-- 		</if> -->
			<if test="kind == null">
				select substr(order_date,0,8) as date_kind, sum(order_total_price) as sales, count(*) as order_count
				from orders
				group by substr(order_date,0,8)
				<if test="searchText != null and searchText != '' ">
					having substr(order_date,0,8) = #{searchText}
				</if>
				order by substr(order_date,0,8) desc
			</if>
			<if test="kind == 1">
				select substr(order_date,0,5) as date_kind, sum(order_total_price) as sales, count(*) as order_count
				from orders
				group by substr(order_date,0,5)
				<if test="searchText != null and searchText != '' " >
					having substr(order_date,0,5) = #{searchText}
				</if>
				order by substr(order_date,0,5) desc
			</if>
<!-- 		<if test="number != null"> -->
<!-- 			) -->
<!-- 			where rownum &lt;= ${number} -->
<!-- 		</if> -->
	</select>
	
	
<!--Orders-주문 -->
	<select id="getOrdersCount" resultType="_int">
		<if test="searchText == null or searchText == ''">
			select count(*)
			from orders
				 join users using(users_no)
			<if test="type != 0">
				where product_type = ${type} 
			</if>
		</if>
		<if test="searchText != null and searchText != ''">
			<if test="kind == 0 or kind == null">
				select count(*)
				from orders
					 join users using(users_no)
				where substr(order_date, 0, 8) = #{searchText}
			</if>
			<if test="kind == 1">
				select count(*)
				from orders
					 join users using(users_no)
				where substr(order_date, 0, 5) = #{searchText}
			</if>
			<if test="type != 0">
				and product_type = ${type} 
			</if>
		</if>
	</select>
	
	<select id="selectOrdersList" resultMap="ordersResultSet">
		<if test="number != null">
			select *
			from(
		</if>
		<if test="searchText == null or searchText == ''">
			select *
			from orders
			 	 left join users using(users_no)
				 left join food using(product_no)
				 left join menu using(product_no)
				 left join ingredient using(product_no)
				 left join tool using(product_no)
			order by order_date desc, order_no desc
		</if>
		<if test="searchText != null and searchText != ''">
			<if test="kind == 0 or kind == null">
				select *
				from orders
					 left join users using(users_no)
					 left join food using(product_no)
					 left join menu using(product_no)
					 left join ingredient using(product_no)
					 left join tool using(product_no)
				where substr(order_date, 0, 8) = #{searchText}
				order by order_date desc, order_no desc
			</if>
			<if test="kind == 1">
				select *
				from orders
					 left join users using(users_no)
					 left join food using(product_no)
					 left join menu using(product_no)
					 left join ingredient using(product_no)
					 left join tool using(product_no)
				where substr(order_date, 0, 5) = #{searchText}
				order by order_date desc, order_no desc
			</if>
		</if>
		<if test="number != null">
			)
			where rownum &lt;= ${number}
		</if>
	</select>
	
	<select id="selectOrders" resultMap="ordersResultSet">
		select *
		from orders
			 left join users using(users_no)
			 left join food using(product_no)
			 left join menu using(product_no)
			 left join ingredient using(product_no)
			 left join tool using(product_no)
		where order_no = ${number}
	</select>


<!--Users-회원 -->
	<select id="getUsersCount" resultType="_int">
		select count(*)
		from users
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where users_name like '%${searchText}%'
			</if>
			<if test='searchType == "id"'>
				where users_id like '%${searchText}%'
			</if>
		</if>
	</select>
		
	<select id="selectUsersList" resultMap="usersResultSet">
		select *
		from (select * 
			  from users
			  order by users_no desc) 
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where users_name like '%${searchText}%'
			</if>
			<if test='searchType == "id"'>
				where users_id like '%${searchText}%'
			</if>
		</if>
	</select>
	
	<select id="selectUsers" resultMap="usersResultSet">
		select *
		from users
		where users_no = #{users_no}
	</select>
	
	<select id="selectUsersInfo" resultType="_int">
		select count(*) from follow	where following_user_no = #{usersNo}
		union all
		select count(*) from follow where users_no = #{usersNo}
		union all
		select count(*) from recipe where users_no = #{usersNo}
		union all
		select count(*) from bookmark where users_no = #{usersNo}
			<if test="bookmarkType != 0">
				and number_type = #{bookmarkType}
			</if>
		union all
		select count(*) from likes where users_no = #{usersNo}
			<if test="likeType != 0">
				and number_type = #{likeType}
			</if>
	</select>
	
	<update id="updateUsers">
		update users
		set 
			<if test="usersId != null">
				users_id = #{usersId},
			</if>
			users_name = #{usersName},
			nickname = #{nickName},
			<if test="email != null">
				email = #{email},
			</if>
			<if test="phone != null">
				phone = #{phone},
			</if>
			status = #{status}, 
			point = #{point},
			is_Admin = #{isAdmin}
		where users_no = #{usersNo}
	</update>
	
	<insert id="insertPoint">
		insert into point(point_no, users_no, point_type, point_before, point_change, modify_date)
		values(seq_point_no.nextval, #{usersNo}, #{pointType}, #{pointBefore}, #{point}, default)
	</insert>
	
<!--Point-포인트 -->
	<select id="getPointCount" resultType="_int">
		select count(*)
		from point
		<if test="searchText != null">
			<if test='searchType == "number"'>
				where users_no like '%${searchText}%'
			</if>
		</if>
	</select>
	
	<select id="selectPointList" resultMap="pointResultSet">
		select *
		from point
		<if test="searchText != null">
			<if test='searchType == "number"'>
				where users_no like '%${searchText}%'
			</if>
		</if>
		order by point_no desc
	</select>
	
<!--Menu-메뉴 -->
	<select id="getMenuCount" resultType="_int">
		select count(*)
		from menu
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where menu_name like '%${searchText}%'
			</if>
		</if>
	</select>
		
	<select id="selectMenuList" resultMap="menuResultSet">
		select *
		from (select * 
			  from menu
			  order by product_no desc) 
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where menu_name like '%${searchText}%'
			</if>
		</if>
	</select>

	<select id="selectMenu" resultMap="menuResultSet">
		select *
		from menu
		where product_no = #{pNo}
	</select>

<!-- 	<select id="selectFoodProductNo" resultType="string"> -->
	<select id="selectFoodProductNo" resultType="_int">
		select food_product_no
		from menu_list
		where product_no = #{pNo}
		order by menu_list_no asc
	</select>

	<update id="updateMenu">
		update menu
		set menu_name = #{menuName},
			menu_type = #{menuType},
			menu_kind = #{menuKind},
			menu_content = #{menuContent}
		where product_no = #{productNo}
	</update>

	<delete id="deleteMenuList">
		delete menu_list
		where product_no = #{productNo}
	</delete>

	<insert id="insertMenu">
		insert into menu(product_no, menu_name, menu_type, menu_kind, menu_content, menu_no)
		values(#{productNo}, #{menuName}, #{menuType}, ${menuKind}, #{menuContent}, seq_menu_no.nextval)
	</insert>
	
	<insert id="insertMenuList">
		insert into menu_list(menu_list_no, product_no, food_product_no)
		 values(seq_menu_list_no.nextval, #{productNo}, #{foodProductNo})
	</insert>

<!--Ingredient-식재료-->
	<select id="getIngredientCount" resultType="_int">
		select count(*)
		from ingredient
		<if test="searchText != null and searchText != ''">
			<if test='searchType == "name"'>
				where ingredient_name like '%${searchText}%'
			</if>
		</if>
	</select>
	
	<select id="selectIngredientList" resultMap="ingredientResultSet">
		select *
		from (select * 
			  from ingredient
			  order by ingredient_no desc) 
		<if test="searchText != null and searchText != ''">
			<if test='searchType == "name"'>
				where ingredient_name like '%${searchText}%'
			</if>
		</if>
	</select>

	<select id="selectIngredient" resultMap="ingredientResultSet">
		select *
		from ingredient
		where ingredient_no = #{igdNo}
	</select>
	
	<update id="updateIngredient">
		update ingredient
		set ingredient_name = #{ingredientName},
			ingredient_type = #{ingredientType},
			ingredient_content = #{ingredientContent},
			<if test="productNo != 0">
				product_no = #{productNo},
			</if>
			is_accept = #{isAccept}
		where ingredient_no = #{ingredientNo}
	</update>
	
	<insert id="insertIngredient">
		insert into ingredient
		values(seq_ingredient_no.nextval, 
		<if test='productStatus == "Y"'>
			(select max(product_no)
			 from product
			 where product_type = 3),
		</if>
		<if test='productStatus != "Y"'>
			0,
		</if>
		#{ingredientName}, #{ingredientType}, #{ingredientContent}, #{isAccept}, #{usersNo}, #{ingredientStatus})   
		<selectKey keyProperty="ingredientNo" resultType="int" order="AFTER">
    		SELECT seq_ingredient_no.currval from dual
    	</selectKey>
	</insert>	
	
	<update id="ingredientUpdateIsAccept">
		update ingredient
		set is_accept = #{isAccept}
		where ingredient_no = #{ingredientNo} 
	</update>
	
	
<!--Food-식품 -->
	<select id="getFoodCount" resultType="_int">
		select count(*)
		from food
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where food_name like '%${searchText}%'
			</if>
		</if>
	</select>
	
	<select id="selectFoodList" resultMap="foodResultSet">
		<if test="type == 3">
			select *
			from food
			where food_no in (select food_no
							  from food
							  group by food_no
							  having count(*) = 2)
				and food_type = 1
				<if test="kind != null">
					and food_kind = #{kind} 
				</if>
		</if>		
		<if test="type != 3">
			select *
			from (select * 
				  from food
				  order by product_no desc) 
			<if test="searchText != null">
				<if test='searchType == "name"'>
					where food_name like '%${searchText}%'
				</if>
			</if>
<!-- 		여기 문제생길 각인데?  'where' 이 두번 반복될수도-->
<!--		그치만 둘을 같이 쓰는 경우를 안만들었음 (아직) -->
			<if test="type != 0">
				where food_type = ${type}
				<if test="kind != null">
					and food_kind = ${kind}
					order by food_name
				</if>
				<if test="kind == null">
					order by food_name
				</if>
			</if>
			<if test="type == 0">
				<if test="kind != null">
					where food_kind = ${kind}
					order by food_name
				</if>
			</if>
		</if>
	</select>
	
	<select id="selectFoodListNotD" resultMap="foodResultSet">
		select *
		from food
		where food_no in (select food_no
						  from food
						  group by food_no
						  having count(*) = 1)
		<if test="kind != null">
			and food_kind = #{kind}
		</if>	
		<if test="type != 0">
			and food_type = #{type}
		</if>
		order by food_name
	</select>
	
	<select id="selectFood" resultMap="foodResultSet">
		select * 
		from food
		<if test="type == 1">
			where product_no = #{no}
		</if>
		<if test="type == 2">
			where food_no = #{no}
		</if>
	</select>
	
	<update id="updateFood">
		update food
		set food_name = #{foodName},
			food_kind = #{foodKind},
			food_type = #{foodType},
			food_content = #{foodContent}
		where product_no = #{productNo}
	</update>
	
	<insert id="insertFood">
		insert into food(product_no, food_no, food_name, food_kind, food_type, food_content)
		values(#{productNo}, 
		<if test="foodNo == 0">
			seq_food_no.nextval,
		</if>
		<if test="foodNo != 0">
			#{foodNo},
		</if>
		#{foodName}, #{foodKind}, #{foodType}, #{foodContent})
	</insert>
	
	<select id="deleteableFood" resultType="string">
		select menu_name||'('||product_no||')'
		from menu_list 
			 join menu using(product_no)
		where food_product_no = #{pNo}
	</select>
	

<!--Tool-도구상품 -->
	<select id="getToolCount" resultType="_int">
		select count(*)
		from tool 
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where tool_name like '%${searchText}%'
				<if test="type != 0">
					and tool_type = ${type}
				</if>
			</if>
		</if>
		<if test="searchText == null">
			<if test="type != 0">
				where tool_type = ${type}
			</if>
		</if>
	</select>
	
	<select id="selectToolList" resultMap="toolResultSet">
		select *
		from (select * 
			  from tool
			  order by product_no desc) 
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where tool_name like '%${searchText}%'
				<if test="type != 0">
					and tool_type = ${type}
				</if>
			</if>
		</if>
		<if test="searchText == null">
			<if test="type != 0">
				where tool_type = ${type}
			</if>
		</if>
	</select>
	
	<select id="selectTool" resultMap="toolResultSet">
		select *
		from tool
		where product_no = #{toolNo}
	</select>
	
	<update id="updateTool">
		update tool
		set tool_name = #{toolName},
			tool_type = #{toolType},
			tool_content = #{toolContent}
		where product_no = #{productNo}
	</update>
	
	<insert id="insertTool">
		insert into tool(product_no, tool_name, tool_type, tool_content)
		values(#{productNo}, #{toolName}, #{toolType}, #{toolContent})
	</insert>


<!--Recipe-레시피 -->
	<select id="getRecipeCount" resultType="_int">
		select count(*)
		from recipe 
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where recipe_name like '%${searchText}%'
			</if>
		</if>
	</select>
	
	<select id="selectRecipeList" resultMap="recipeResultSet">
		select *
		from (select * 
			  from recipe
			  	   join users using(users_no)
			  order by food_no desc) 
		<if test="searchText != null">
			<if test='searchType == "name"'>
				where recipe_name like '%${searchText}%'
			</if>
		</if>
		<if test="searchText == null and number != null">
			where food_no = #{number}
		</if>
	</select>


<!--Board-게시판 -->
	<select id="getBoardCount" resultType="_int">
		select count(*)
		from board
			 join users using(users_no)
			<if test="searchText != null">
				<if test='searchType == "writer"'>
					where users_id like '%${searchText}%'
				</if>
				<if test='searchType == "title"'>
					where board_title like '%${searchText}%'
				</if>
			</if>
	</select>
	<select id="selectBoardList" resultMap="boardResultSet">
		select *
		from board
			 join users using(users_no)
			<if test="searchText != null">
				<if test='searchType == "writer"'>
					where users_id like '%${searchText}%'
				</if>
				<if test='searchType == "title"'>
					where board_title like '%${searchText}%'
				</if>
			</if>
		order by board_no desc
	</select>
	<select id="selectBoard" resultMap="boardResultSet">
		select *
		from board
			 join users using(users_no)
		where board_no = ${boardNo}
	</select>


<!--Review-리뷰 -->
	<select id="getReviewCount" resultType="_int">
		select count(*)
		from review
		     left join recipe on(product_no = food_no)
			 left join board on(product_no = board_no)
			 left join product using(product_no)
		     left join food using(product_no)
		     left join menu using(product_no)
		     left join ingredient using(product_no)
		     left join tool using(product_no)
		<if test="kind == -1">
			where order_no = ${kind}
		</if>
		<if test="kind != -1">
			where not order_no = -1
			<if test="kind == 0">
				and order_no = 0
			</if>
			<if test="kind == 1 and type != 0">
				and not order_no = 0
				and product_type = ${type}
			</if>
		</if>
	</select>
	<select id="selectReviewListAll" resultMap="reviewResultSet">
		select *
		from review
			 full join recipe on(product_no = food_no)
			 full join food(product)
	</select>
	<select id="selectReviewList" resultMap="reviewResultSet">
<!-- 	review 조건 -->
<!--    레시피후기, 전체상품후기		kind = null -->

<!-- 	게시판댓글					kind = -1 -->
<!-- 	레시피후기					kind = 0 -->
<!-- 	레시피-후기리스트				kind = 0	number != 0 duplication = 'Y' -->
<!-- 	전체상품후기				kind = 1 -->
<!-- 	식품상품후기	type = 1 	kind = 1 -->
<!-- 	메뉴상품후기	type = 2 	kind = 1 -->
<!-- 	식재료상품후기	type = 3 	kind = 1 -->
<!-- 	도구상품후기	type = 4 	kind = 1 -->
<!-- 	리뷰-번호조회							number != 0 duplication = null -->
<!-- 	게시글-댓글리스트				kind = -1	number != 0 duplication = 'Y' -->
<!--  +	검색 			-->
		select *
		from review
		     left join recipe on(product_no = food_no)
			 left join board on(product_no = board_no)
			 left join product using(product_no)
		     left join food using(product_no)
		     left join menu using(product_no)
		     left join ingredient using(product_no)
		     left join tool using(product_no)

		<if test="kind == 0 or kind == -1">
			where order_no = ${kind}
		</if>
		<if test="kind == 1">
			where not order_no in (0, -1)
			<if test="type == 1 or type == 2 or type == 3 or type == 4">
				and product_type = ${type}
			</if>
		</if>
		<if test="kind == null">
			where not order_no = -1
		</if>
		
		<if test="searchText != null">
			<if test='searchType == "writer"'>
				and review_writer like '%${searchText}%'
			</if>
			<if test='searchType == "content"'>
				and review_content like '%${searchText}%'
			</if>
		</if>
		<if test="number != null and duplication == null">
				and review_no = ${number}
		</if>
		<if test='number != null and duplication == "Y"'>
				and product_no = ${number}
		</if>
		
		order by review_no desc
	</select>
	<select id="selectReview" resultMap="reviewResultSet">
		select *
		from review
			 left join recipe on(product_no = food_no)
			 left join board on(product_no = board_no)
			 left join product using(product_no)
		     left join food using(product_no)
		     left join menu using(product_no)
		     left join ingredient using(product_no)
		     left join tool using(product_no)
		where review_no = ${reviewNo}
	</select>
	<delete id="deleteReview">
<!-- 	review 일괄삭제 조건		order_no	? 			-->
<!-- 	레시피후기					kind = 0	number != 0 -->
<!-- 	게시판댓글					kind = -1 	number != 0	-->
<!-- 	전체상품후기				kind = null number != 0	-->
<!-- 	리뷰-번호								number != 0 duplication = 'N' -->
<!--  +	검색 			-->
		delete review
		<if test="kind == 0 or kind == -1">
			where order_no = ${kind}
				  and product_no = ${number} 
		</if>
		<if test="kind == null">
			where order_no > 0
				  and order_no = ${number}  
		</if>
		<if test='duplication == "N"'>
			where review_no = ${number}
		</if>
	</delete>
	

<!--FAQ-자주묻는질문 -->
	<select id="getFAQCount" resultType="_int">
		select count(*)
		from faq
		where faq_no > 0
		<if test="searchText != null">
			<if test='searchType == "title"'>
				and faq_title like '%${searchText}%'
			</if>
			<if test='searchType == "content"'>
				and faq_content like '%${searchText}%'
			</if>
		</if>
		<if test="kind == 0">
			and faq_type = #{type}
		</if>
		order by faq_no desc
	</select>
	
	<select id="selectFAQList" resultMap="faqResultSet">
		select *
		from faq
		where faq_no > 0
		<if test="searchText != null">
			<if test='searchType == "title"'>
				and faq_title like '%${searchText}%'
			</if>
			<if test='searchType == "content"'>
				and faq_content like '%${searchText}%'
			</if>
		</if>
		<if test="kind == 0">
			and faq_type = #{type}
		</if>
		order by faq_no desc
	</select>
	
	<select id="selectFAQ" resultMap="faqResultSet">
		select *
		from faq
		where faq_no = ${faqNo}
	</select>

	<update id="updateFAQ">
		update faq
		set faq_title = #{faqTitle},
			faq_content = #{faqContent},
			faq_answer = #{faqAnswer},
			faq_date = sysdate,
			faq_status = #{faqStatus},
			faq_type = #{faqType}
		where faq_no = ${faqNo}
	</update>
	
	<insert id="insertFAQ">
		insert into faq(faq_no, users_no, faq_title, faq_content, faq_date, faq_status, faq_type, faq_answer)
		values(seq_faq_no.nextval, #{usersNo}, #{faqTitle}, #{faqContent}, sysdate, #{faqStatus}, #{faqType}, #{faqAnswer})
	</insert>


<!--QNA-1:1문의 -->
	<select id="getQNACount" resultType="_int">
		select count(*)
		from qna
		<if test="searchText != null">
			<if test='searchType == "title"'>
				where qna_title like '%${searchText}%'
			</if>
			<if test='searchType == "content"'>
				where qna_content like '%${searchText}%'
			</if>
		</if>
		order by qna_no desc
	</select>
	
	<select id="selectQNAList" resultMap="qnaResultSet">
		select *
		from qna
			 join users using(users_no)
		<if test="searchText != null">
			<if test='searchType == "title"'>
				where qna_title like '%${searchText}%'
			</if>
			<if test='searchType == "content"'>
				where qna_content like '%${searchText}%'
			</if>
		</if>
		order by qna_no desc
	</select>
	
	<select id="selectQNA" resultMap="qnaResultSet">
		select *
		from qna
			 join users using(users_no)
		where qna_no = ${qnaNo}
	</select>
	
	<update id="updateQNA">
		update qna
		set admin_no = ${adminNo},
			answer_date = sysdate,
			answer_content = #{answerContent},
			qna_status = #{qnaStatus}
		where qna_no = #{qnaNo}
	</update>
	
	
<!--Healther-영양사 -->
	<select id="selectHealther" resultMap="healtherResultSet">
		select *
		from healther
		where users_no = #{uNo}
	</select>
	
	<insert id="insertHealther">
		insert into healther(users_no, name, title, career)
		values(#{usersNo}, #{name}, #{title}, #{career})
	</insert>
	
	<update id="updateHealther">
		update healther
		set name = #{name},
			title = #{title},
			career = #{career}
		where users_no = #{usersNo}
	</update>
	
<!--ResultSet -->
<!-- ㅡ공용 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<resultMap type="kh.finalproj.hollosekki.common.model.vo.Product" id="productResultSet">
		<id column="PRODUCT_NO" property="productNo"/>
		<result column="PRODUCT_TYPE" property="productType"/>
		<result column="PRODUCT_PRICE" property="productPrice"/>
		<result column="PRODUCT_OPTION" property="productOption"/>
		<result column="PRODUCT_STOCK" property="productStock"/>
		<result column="PRODUCT_CREATE_DATE" property="productCreateDate"/>
		<result column="PRODUCT_MODIFY_DATE" property="productModifyDate"/>
		<result column="PRODUCT_SALE" property="productSale"/>
		<result column="PRODUCT_COUNT" property="productCount"/>
		<result column="PRODUCT_STATUS" property="productStatus"/>
	</resultMap>
	
	<resultMap type="Image" id="imageResultSet">
		<id column="image_no" property="imageNo"/>
		<result column="image_divide_no" property="imageDivideNo"/>
		<result column="image_type" property="imageType"/>
		<result column="image_originalname" property="imageOriginalName"/>
		<result column="image_renamename" property="imageRenameName"/>
		<result column="image_path" property="imagePath"/>
		<result column="image_level" property="imageLevel"/>
	</resultMap>

	<resultMap type="kh.finalproj.hollosekki.common.model.vo.Options" id="optionsResultSet">
		<id column="OPTION_NO" property="optionNo"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="OPTION_NAME" property="optionName"/>
		<result column="OPTION_VALUE" property="optionValue"/>
	</resultMap>
	
	
<!-- ㅡnot 공용 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	
	<resultMap type="AdminMain" id="adminMainResultSet">
		<id column="DAY" property="day"/>
		<result column="ORDER_DAY_COUNT" property="orderDayCount"/>
		<result column="ORDER_DAY_SALES" property="orderDaySales"/>
		<result column="RECIPE_DAY_COUNT" property="recipeDayCount"/>
		<result column="ENROLL_DAY_COUNT" property="enrollDayCount"/>
		<result column="MENU_DAY_COUNT" property="menuDayCount"/>
	</resultMap>
	
	<resultMap type="Sales" id="salesResultSet">
		<id column="date_kind" property="dateKind"/>
		<result column="sales" property="sales"/>
		<result column="order_count" property="orderCount"/>
	</resultMap>
	
	<resultMap type="Orders" id="ordersResultSet">
    	<id column="ORDER_NO" property="orderNo"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="USERS_ID" property="usersId"/>
		<result column="PRODUCT_TYPE" property="productType"/>
		<result column="ORDER_COUNT" property="orderCount"/>
		<result column="ORDER_TOTAL_PRICE" property="totalPrice"/>
		<result column="ORDER_DATE" property="orderDate"/>
		<result column="ORDER_STATUS" property="orderStatus"/>
		<result column="ORDER_ADDRESS" property="orderAddress"/>
		<result column="ORDER_DELIVERY_DATE" property="orderDeliveryDate"/>
		<result column="ORDER_STOCK" property="orderStock"/>
		<result column="ORDER_DELIVERY_COMMENT" property="orderDeliveryComment"/>
		<result column="ORDER_INFO" property="orderInfo"/>
		<result column="SHIP_PRICE" property="shipPrice"/>
		<result column="OPTIONS" property="options"/>
		
		<result column="FOOD_NAME" property="productName"/>
		<result column="MENU_NAME" property="productName"/>
		<result column="INGREDIENT_NAME" property="productName"/>
		<result column="TOOL_NAME" property="productName"/>
   </resultMap>
	
	<resultMap type="Users" id="usersResultSet">
		<id column="USERS_NO" property="usersNo"/>
		<result column="USERS_ID" property="usersId"/>
		<result column="USERS_PW" property="usersPw"/>
		<result column="USERS_NAME" property="usersName"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="EXIT_DATE" property="exitDate"/>
		<result column="STATUS" property="status"/>
		<result column="CHECK_DAY" property="checkDay"/>
		<result column="POINT" property="point"/>
		<result column="IS_ADMIN" property="isAdmin"/>
		<result column="ATTENDANCE_DATE" property="attendanceDate"/>
		<result column="ATTENDANCE_DAY" property="attendanceDay"/>
		<result column="USERS_SELFINTRO" property="usersSelfIntro"/>
	</resultMap>
	
	<resultMap type="Point" id="pointResultSet">
		<id column="POINT_NO" property="pointNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="POINT_TYPE" property="pointType"/>
		<result column="POINT_BEFORE" property="pointBefore"/>
		<result column="POINT_CHANGE" property="pointChange"/>
		<result column="MODIFY_DATE" property="modifyDate"/>
	</resultMap>
	
	<resultMap type="Menu" id="menuResultSet">
		<id column="PRODUCT_NO" property="productNo"/>
		<result column="MENU_NAME" property="menuName"/>
		<result column="MENU_TYPE" property="menuType"/>
		<result column="MENU_KIND" property="menuKind"/>
		<result column="MENU_CONTENT" property="menuContent"/>
		<result column="MENU_NO" property="menuNo"/>
	</resultMap>
	
	<resultMap type="Ingredient" id="ingredientResultSet">
		<id column="INGREDIENT_NO" property="ingredientNo"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="INGREDIENT_NAME" property="ingredientName"/>
		<result column="INGREDIENT_TYPE" property="ingredientType"/>
		<result column="INGREDIENT_CONTENT" property="ingredientContent"/>
		<result column="IS_ACCEPT" property="isAccept"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="INGREDIENT_STATUS" property="ingredientStatus"/>
	</resultMap>
	
	<resultMap type="kh.finalproj.hollosekki.common.model.vo.Food" id="foodResultSet">
		<id column="PRODUCT_NO" property="productNo"/>
		<result column="FOOD_NO" property="foodNo" />
		<result column="FOOD_NAME" property="foodName"/>
		<result column="FOOD_KIND" property="foodKind"/>
		<result column="FOOD_TYPE" property="foodType"/>
		<result column="FOOD_CONTENT" property="foodContent"/>
	</resultMap>
	
	<resultMap type="kh.finalproj.hollosekki.common.model.vo.Tool" id="toolResultSet">
		<id column="PRODUCT_NO"	property="productNo"/>
		<result column="TOOL_NAME" property="toolName"/>
		<result column="TOOL_TYPE" property="toolType"/>
		<result column="TOOL_CONTENT" property="toolContent"/>
	</resultMap>
	
	<resultMap type="Recipe" id="recipeResultSet">
		<id column="food_no" property="foodNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="RECIPE_NAME" property="recipeName"/>
		<result column="CATEGORY_INGREDIENT" property="categoryIngredient"/>
		<result column="CATEGORY_SITUATION" property="categorySituation"/>
		<result column="CATEGORY_TYPE" property="categoryType"/>
		<result column="RECIPE_DIFFICULTY" property="recipeDifficulty"/>
		<result column="RECIPE_TIME" property="recipeTime"/>
		<result column="RECIPE_CONTENT" property="recipeContent"/>
		<result column="RECIPE_COUNT" property="recipeCount"/>
		<result column="RECIPE_CREATE_DATE" property="recipeCreateDate"/>
		<result column="RECIPE_MODIFY_DATE" property="recipeModifyDate"/>
		<result column="RECIPE_STATUS" property="recipeStatus"/>
		<result column="USERS_ID" property="usersId"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="IMAGE_RENAMENAME" property="imageRenameName"/>
	</resultMap>
	
	<resultMap type="Board" id="boardResultSet">
		<id column="BOARD_NO" property="boardNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="BOARD_DATE" property="boardDate"/>
		<result column="BOARD_STATUS" property="boardStatus"/>
		<result column="BOARD_TYPE" property="boardType"/>
		<result column="BOARD_COUNT" property="boardCount"/>
	</resultMap>
	
	<resultMap type="kh.finalproj.hollosekki.common.model.vo.Review" id="reviewResultSet">
		<id column="REVIEW_NO" property="reviewNo"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="ORDER_NO" property="orderNo"/>
		<result column="REVIEW_TITLE" property="reviewTitle"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_SCORE" property="reviewScore"/>
		<result column="REVIEW_STATUS" property="reviewStatus"/>
		<result column="REVIEW_DATE" property="reviewDate"/>
		<result column="REVIEW_WRITER" property="reviewWriter"/>
		
		<result column="FOOD_NO" property="foodNo"/>
		<result column="RECIPE_NAME" property="recipeName"/>

		<result column="BOARD_NO" property="boardNo"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		
		<result column="PRODUCT_TYPE" property="productType"/>
		<result column="MENU_NAME" property="productName"/>
		<result column="FOOD_NAME" property="productName"/>
		<result column="INGREDIENT_NAME" property="productName"/>
		<result column="TOOL_NAME" property="productName"/>
	</resultMap>
	
	<resultMap type="FAQ" id="faqResultSet">
		<id column="FAQ_NO" property="faqNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="FAQ_TITLE" property="faqTitle"/>
		<result column="FAQ_CONTENT" property="faqContent"/>
		<result column="FAQ_ANSWER" property="faqAnswer"/>
		<result column="FAQ_DATE" property="faqDate"/>
		<result column="FAQ_STATUS" property="faqStatus"/>
		<result column="FAQ_TYPE" property="faqType"/>
	</resultMap>
	
	<resultMap type="kh.finalproj.hollosekki.common.model.vo.QNA" id="qnaResultSet">
		<id column="QNA_NO" property="qnaNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="USERS_ID" property="usersId"/>
		<result column="QNA_DATE" property="qnaDate"/>
		<result column="QNA_TITLE" property="qnaTitle"/>
		<result column="QNA_CONTENT" property="qnaContent"/>
		<result column="ADMIN_NO" property="adminNo"/>
		<result column="ANSWER_DATE" property="answerDate"/>
		<result column="ANSWER_CONTENT" property="answerContent"/>
		<result column="QNA_STATUS" property="qnaStatus"/>
		<result column="QNA_TYPE" property="qnaType"/>
	</resultMap>
	
	<resultMap type="Healther" id="healtherResultSet">
		<id column="USERS_NO" property="usersNo"/>
		<result column="NAME" property="name"/> 
		<result column="TITLE" property="title"/> 
		<result column="CARRER" property="carrer"/> 
	</resultMap>
</mapper>