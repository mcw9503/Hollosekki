<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="marketMapper">
   <update id="aDateCheck">
      update users
      set check_day = (select count(dateStr)
                      from attendance
                      where users_id = #{u.usersId} and
                         substr(dateStr,6,2) = to_char(last_day(sysdate),'MM'))
      where users_id = #{u.usersId}
   </update>
   
   <select id="sendPoint" resultMap="UsersResultSet">
      select point
      from users
      where users_id = #{usersId}
   </select>
   
   <select id="atTodayChecked" resultType="_int">
       select count(*)
       from attendance
       where users_id = #{usersId}
             and dateStr = checked
             and dateStr = to_char(sysdate, 'YYYY-MM-DD')
   </select>
   
   <resultMap type="Users" id="UsersResultSet">
      <id column="USERS_NO" property="usersNo"/>
      <result column="USERS_ID" property="usersId"/>
      <result column="USERS_PW" property="usersPw"/>
      <result column="USERS_NAME" property="usersName"/>
      <result column="NICKNAME" property="nickname"/>
      <result column="EMAIL" property="email"/>
      <result column="PHONE" property="phone"/>
      <result column="ENROLL_DATE" property="enrollDate"/>
      <result column="EXIT_DATE" property="exitDate"/>
      <result column="STATUS" property="status"/>
      <result column="CHECK_DAY" property="checkDay"/>
      <result column="POINT" property="point"/>
      <result column="IS_ADMIN" property="isAdmin"/>
      <result column="ATTENDANCE_DATE" property="attendanceDate"/>
      <result column="ATTENDANCE_DAY" property="attendanceDay"/>
   </resultMap>
   
   <insert id="atInsert">
       insert into attendance (USERS_ID, DATE1, DATESTR, CHECKED, TITLE)
       values (#{u.usersId}, #{at.date}, #{at.dateStr}, to_char(sysdate, 'YYYY-MM-DD'), #{at.title})
   </insert>
   
   <insert id="atPointList">
   		insert into point 
   		values (SEQ_POINT_NO.nextval, #{u.usersNo}, 1, #{u.point}, #{u.point}+10, sysdate)
   </insert>
   
   <select id="monthCheckUser" resultMap="AttendanceResultSet">
  		select *
        from attendance
              join users using(users_id)
        where dateStr = to_char(sysdate, 'YYYY-MM-DD')
            and users_id = #{u.usersId}
            and check_day = to_char(last_day(sysdate),'dd')
        	and sysdate = last_day(sysdate)
   </select>
   
   
   <insert id="monthAtPointList">
   		insert into point
   		values (seq_point_no.nextval, #{usersNo}, 1, #{point}, #{point}+1000, sysdate)
   </insert>
   
   
   <insert id="insertShipping">
        insert into shipping_address (USERS_NO, RECIPIENT, ADDRESS, HOME_PHONE, PHONE, SHIPPING_NO, SHIPPING_NAME)
        values (#{usersNo}, #{recipient}, #{address}, #{homePhone}, #{phone}, SEQ_SHIPPING_ADDRESS.nextval, #{shippingName})
   </insert>

   
   <select id="allAt" resultMap="AttendanceResultSet">
      select
          *
      from
          attendance
      where
          users_id = #{usersId}
   </select>
   
   <resultMap type="Attendance" id="AttendanceResultSet">
      <id column="USERS_ID" property="usersId"/>
      <result column="DATE1" property="date"/>
      <result column="DATESTR" property="dateStr"/>
      <result column="CHECKED" property="checked"/>
      <result column="TITLE" property="title"/>
      <result column="POINT" property="point"/>
   </resultMap>
   
   <update id="gettedPoint">
      update users
      set point = #{u.point} + 10
      where users_id = #{u.usersId}
   </update>
   
   <update id="getMonthPoint">
      update users
      set point = #{u.point} + 1000,
         check_day = 0
      where users_id in (select users_id
                          from attendance
                                join users using(users_id)
                          where dateStr = to_char(sysdate, 'YYYY-MM-DD')
                              and users_id = #{u.usersId}
                              and check_day = to_char(last_day(sysdate),'dd')
                          and sysdate = last_day(sysdate))
   </update>

<!--    <select id="selectShipping" resultMap="shipAddress"> -->
<!--       select * -->
<!--       from shipping_address -->
<!--       where users_no = #{usersNo} -->
<!--    </select> -->
   
<!--    <resultMap type="ShippingAddress" id="shipAddress"> -->
<!--       <result column="USERS_NO" property="usersNo"/> -->
<!--       <result column="RECIPIENT" property="recipient"/> -->
<!--       <result column="ADDRESS" property="address"/> -->
<!--       <result column="HOME_PHONE" property="homePhone"/> -->
<!--       <result column="PHONE" property="phone"/> -->
<!--       <result column="SHIPPING_NO" property="shippingNo"/> -->
<!--       <result column="SHIPPING_NAME" property="shippingName"/> -->
      
<!--    </resultMap> -->
   
   <select id="selectShipping" resultMap="shipAddress">
      select *
      from shipping_address
      where users_no = #{usersNo}
      order by shipping_no desc
   </select>
   
   <resultMap type="ShippingAddress" id="shipAddress">
      <result column="USERS_NO" property="usersNo"/>
      <result column="RECIPIENT" property="recipient"/>
      <result column="ADDRESS" property="address"/>
      <result column="HOME_PHONE" property="homePhone"/>
      <result column="PHONE" property="phone"/>
      <result column="SHIPPING_NO" property="shippingNo"/>
      <result column="SHIPPING_NAME" property="shippingName"/>
   </resultMap>
   
   <select id="selectCartList" resultMap="cartList">
      SELECT *
      FROM cart
      LEFT JOIN product on (cart.product_no = product.product_no)
      WHERE cart.users_no = #{usersNo} AND product.PRODUCT_STATUS = 'Y'
      ORDER BY cart.pre_order_no
   </select>
   
<!--    <select id="selectCartList" resultMap="cartList"> -->
<!--       select * from cart where users_no = #{usersNo} -->
<!--    </select> -->
   
   <resultMap type="Cart" id="cartList">
      <id column="CART_NO" property="cartNo"/>
      <result column="USERS_NO" property="usersNo"/>
      <result column="PRODUCT_NO" property="productNo"/>
      <result column="PRODUCT_OPTION" property="productOption"/>
      <result column="CART_COUNT" property="cartCount"/>
      <result column="PRE_ORDER_NO" property="preorderNo"/>
   </resultMap>
   
   <resultMap type="Options" id="optionsList">
      <id column="OPTION_NO" property="optionNo"/>
      <result column="PRODUCT_NO" property="productNo"/>
      <result column="OPTION_NAME" property="optionName"/>
      <result column="OPTION_VALUE" property="optionValue"/>
   </resultMap>
   
   <resultMap type="MarketProduct" id="productList">
      <id column="PRODUCT_NO" property="productNo"/>
      <result column="PRODUCT_TYPE" property="productType"/>
      <result column="PRODUCT_PRICE" property="productPrice"/>
      <result column="PRODUCT_OPTION" property="productOption"/>
      <result column="PRODUCT_STOCK" property="productStock"/>
      <result column="PRODUCT_CREATE_DATE" property="productCreateDate"/>
      <result column="PRODUCT_MODIFY_DATE" property="productModifyDate"/>
      <result column="PRODUCT_SALE" property="productSale"/>
      <result column="PRODUCT_COUNT" property="productCount"/>
      <result column="PRODUCT_STATUS" property="productStatus"/>
   </resultMap>
   
   <resultMap type="Food" id="foodInfo">
      <result column="PRODUCT_NO" property="productNo"/>
      <result column="FOOD_NAME" property="foodName"/>
      <result column="FOOD_KIND" property="foodKind"/>
      <result column="FOOD_TYPE" property="foodType"/>
      <result column="FOOD_CONTENT" property="foodContent"/>
   </resultMap>
   
   <resultMap type="Tool" id="toolInfo">
      <result column="PRODUCT_NO" property="productNo"/>
      <result column="TOOL_NAME" property="toolName"/>
      <result column="TOOL_TYPE" property="toolType"/>
      <result column="TOOL_CONTENT" property="toolContent"/>
   </resultMap>
   
   <resultMap type="Ingredient" id="ingredientInfo">
      <result column="INGREDIENT_NO" property="ingredientNo"/>
      <result column="PRODUCT_NO" property="productNo"/>
      <result column="INGREDIENT_NAME" property="ingredientName"/>
      <result column="INGREDIENT_TYPE" property="ingredientType"/>
      <result column="INGREDIENT_STATUS" property="ingredientStatus"/>
   </resultMap>
   
   <select id="selectFood" resultMap="foodInfo">
      select * from food where product_no = #{productNo}
   </select>
   
   <select id="selectProductInfo" resultMap="productList">
      select * from product where product_no = #{productNo}
   </select>
   
   <select id="selectTool" resultMap="toolInfo">
      select * from tool where product_no = #{productNo}
   </select>
   
   <select id="selectIngrdient" resultMap="ingredientInfo">
      select * from ingredient where product_no = #{productNo}
   </select>
   
   <delete id="delBasket">
      delete from cart where pre_order_no = #{preorderNo}
   </delete>
   
   <update id="plusCount">
      update cart set cart_count = cart_count + 1 
      where pre_order_no = #{preorderNo}
   </update>
   
   <select id="plusResultCount" resultType="_int">
      <![CDATA[
      SELECT cart_count
      FROM (
          SELECT cart_count
          FROM cart
          WHERE pre_order_no = #{preorderNo}
      )
      WHERE ROWNUM = 1
       ]]>
   </select>
   
   <update id="minusCount">
      update cart set cart_count = cart_count - 1 
      where pre_order_no = #{preorderNo}
   </update>
   
   <select id="checkCartList" resultMap="cartList">
      select * from cart where users_no = #{usersNo} and pre_order_no = #{preorderNo}
   </select>
   
   <select id="selectOptions" resultMap="optionsList">
      select * from options where option_no = #{optionNo} and product_no = #{productNo}
   </select>
   
   <select id="selectOptionsSet" resultMap="optionsList">
         select *
      from (select *
           from options
           order by option_no)
      where product_no = #{productNo}
   </select>
   
   <select id="updateOptionNo" resultType="_int">
      update cart set product_option = #{productOption} where product_no = #{productNo}
   </select>
   
   <select id="selectOptionNo" resultMap="cartList">
      select * from cart where product_no = #{productNo} and users_no = #{usersNo} and pre_order_no = #{preorderNo}
   </select>
   
<!--    <select id="selectOptionInfo" resultMap="optionsList"> -->
<!--       select * from options where option_no = #{productOption} and product_no = #{productNo} -->
<!--    </select> -->
   
   <select id="selectProductSet" resultMap="productList">
      select *
      from product
      where product_no = #{productNo}
   </select>
   
<!--    <select   id="selectReview" resultMap ="reviewResultSet"> -->
<!--       select * from review where product_no = #{productNo} -->
<!--    </select> -->
   
   
   
   <insert id="insertCart">
      <if test="preorderNo == 0">
         insert all 
         into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption}, #{cartCount}, seq_pre_no.nextval)
           into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption2}, #{cartCount}, seq_pre_no.currval)
           select * from dual
      </if>
      <selectKey keyProperty="preorderNo" resultType="int" order="AFTER" >
         select seq_pre_no.currval from dual
      </selectKey>
        <if test="preorderNo != 0">
           insert all 
         into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption}, #{cartCount}, #{preorderNo})
           into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption2}, #{cartCount}, #{preorderNo})
           select * from dual
        </if>   
   </insert>
   
   
   <select id="selectShippingForUpdate" resultMap="shipAddress">
      select * from shipping_address where shipping_no = #{shippingNo}
   </select>
   
   <update id="updateConfirmShipping">
      update shipping_address set
      RECIPIENT=#{recipient}, ADDRESS=#{address}, PHONE=#{phone}, SHIPPING_NAME=#{shippingName}
      where SHIPPING_NO = #{shippingNo}
   </update>
   
   <select id="selectChecShip" resultMap="shipAddress">
      select * from shipping_address where shipping_no = #{shippingNo}
   </select>
   
   <!-- productNo에 대한 menu 조회  -->
   <select id="selectMenu" resultMap="menuInfo">
      select * from menu where product_no = #{productNo}
   </select>
   
   <resultMap type="Menu" id="menuInfo">
      <result column="PRODUCT_NO" property="foodProductNo"/>
      <result column="MENU_NAME" property="menuName"/>
      <result column="MENU_TYPE" property="menuType"/>
      <result column="MENU_CONTENT" property="menuContent"/>
   </resultMap>
   
   <insert id="insertImage">
      insert into image(image_no, image_divide_no, image_type, image_originalname, image_renamename, image_path, image_level)
      values(seq_image_no.nextval, #{imageDivideNo}, #{imageType}, #{imageOriginalName}, #{imageRenameName}, #{imagePath}, #{imageLevel})
   </insert>
   
   
   <resultMap type="Image" id="imageResultSet">
      <id column="image_no" property="imageNo"/>
      <result column="image_divide_no" property="imageDivideNo"/>
      <result column="image_type" property="imageType"/>
      <result column="image_originalname" property="imageOriginalName"/>
      <result column="image_renamename" property="imageRenameName"/>
      <result column="image_path" property="imagePath"/>
      <result column="image_level" property="imageLevel"/>
   </resultMap>
   
   
      <resultMap type="Review" id="reviewResultSet">
      <id column="PRODUCT_NO" property="productNo"/>
      <result column="ORDER_NO" property="orderNo"/>
      <result column="REVIEW_NO" property="reviewNo"/>
      <result column="REVIEW_TITLE" property="reviewTitle"/>
      <result column="REVIEW_CONTENT" property="reviewContent"/>
      <result column="REVIEW_SCORE" property="reviewScore"/>
      <result column="REVIEW_STATUS" property="reviewStatus"/>
      <result column="REVIEW_DATE" property="reviewDate"/>
      <result column="REVIEW_WRITER" property="reviewWriter"/>
      <result column="USERS_NO" property="usersNo"/>
      
      <result column="image_divide_no" property="imageDivideNo"/>
      <result column="image_type" property="imageType"/>
      <result column="image_originalname" property="imageOriginalName"/>
      <result column="image_renamename" property="imageRenameName"/>
      <result column="image_path" property="imagePath"/>
      <result column="image_level" property="imageLevel"/>
   </resultMap>
   
   
   <select id="selectReviewCount" resultType="int">
  select count(*)
      from review
      where product_no = #{productNo} and order_no > 0  and review_status = 'Y'
   </select>
   
   <select id="selectImagList" resultMap="imageResultSet">
		select *
		from (select *
			  from image
			  order by image_no asc)	
		where image_divide_no = #{imageDivideNo} and image_type = #{imageType}
		<if test="imageLevel != -1">
			  and image_level = #{imageLevel}
			  </if>
	</select>
	
	<!-- 배송지 삭제 -->
	<delete id="delShipping">
		DELETE FROM shipping_address
		WHERE shipping_no = #{shippingNo}
	</delete>
	
   <insert  id="insertReview">
      insert into review(product_no, order_no, review_no, review_title, review_content, review_score, review_status, review_date, review_writer, users_no)
      values(#{productNo}, seq_order_no.nextval, seq_review_no.nextval, null, #{reviewContent}, #{reviewScore}, default, sysdate, #{reviewWriter}, #{usersNo})
      <selectKey keyProperty="reviewNo" resultType="int" order="AFTER" >
         select seq_review_no.currval from dual
      </selectKey>
   
   </insert>
   
      <select id="selectImgList" resultMap="imageResultSet">
        select *
        from image join review on review_no = image_divide_no
        where image_type = 7
                  and product_no = #{productNo} and review_status = 'Y'
        order by review_no
	</select>
   
   <select id="reviewAvg" resultType="_integer">
	  select round(avg(review_Score))
      from (select *
           from review
           order by review_date desc)   
      where product_no = #{productNo} and  order_no > 0  and review_status = 'Y'
   </select>
   
   <select id="reviewAvgDesc" resultMap="reviewResultSet">
            select *
      from (select *
           from review
           order by review_date desc)   
      where product_no = #{productNo} and  order_no > 0  and review_status = 'Y'
      order by review_score desc, review_no desc
   </select>
   
   <select id="reviewDesc" resultMap="reviewResultSet">
            select *
      from (select *
           from review
           order by review_date desc)   
      where product_no = #{productNo} and  order_no > 0  and review_status = 'Y'
      order by review_no desc, review_score desc
   </select>
   
   
   <select id="selectReview" resultMap="reviewResultSet">
      select *
      from (select *
           from review
           order by review_date desc)   
      where product_no = #{productNo} and  order_no > 0  and review_status = 'Y'
   </select>
   
   <select id="selectImageList" resultMap="imageResultSet">
      select *
      from (select *
           from image
           order by image_no asc)   
      where image_divide_no = #{imageDivideNo} and image_type = #{imageType}
      <if test="imageLevel != -1">
           and image_level = #{imageLevel}
      </if>
   </select>
   
   
   <!-- 포인트 조회  -->
<!--    <select id="selectPoint" resultType="_int"> -->
<!--       <![CDATA[ -->
<!--       SELECT POINT_CHANGE -->
<!--       FROM ( -->
<!-- 	    SELECT * -->
<!-- 	    FROM point -->
<!-- 	    WHERE USERS_NO = #{usersNo} -->
<!-- 	    ORDER BY POINT_NO DESC -->
<!-- 	    ) WHERE ROWNUM = 1 -->
<!--  	  ]]>  -->
<!--    </select> -->

   <select id="selectPoint" resultType="_int">
      <![CDATA[
      SELECT POINT
      FROM USERS
	  WHERE USERS_NO = #{usersNo}
 	  ]]> 
   </select>
   
   <!-- 장바구니 상품에 대한 이미지 조회 -->
   <select id="selectImg" resultType="String">
      select image_renamename from image where image_divide_no = #{productNo} and image_type =#{imgType} and image_level = 0
   </select>
   
   <select id="selectStock" resultType="_int">
        select PRODUCT_STOCK from product where product_no = #{productNo}
   </select>
   
   <!-- 결제 시 insert -->
   <insert id="insertPay">
        insert into orders (ORDER_NO, PRODUCT_NO, USERS_NO, PRODUCT_TYPE, ORDER_COUNT, ORDER_TOTAL_PRICE, ORDER_DATE, ORDER_STATUS, ORDER_ADDRESS, ORDER_STOCK, ORDER_DELIVERY_COMMENT,ORDER_INFO, SHIP_PRICE, OPTIONS )
        values (SEQ_ORDER_NO.nextval, #{productNo}, #{usersNo}, #{productType}, #{orderCount}, #{totalPrice}, sysdate, default, #{orderAddress}, 'R', #{orderDeliveryComment}, #{orderInfo}, #{shipPrice}, #{options})
   </insert>
   
   <update id="updatePoint">
      update users
      set point = #{point}
      where users_id = #{usersId}
   </update>
   
   <!-- 결제 후 장바구니에서 해당 상품 제거 -->
   <delete id="deleteFromCart">
   		DELETE FROM cart
		WHERE PRE_ORDER_NO = #{preorderNo}
   </delete>
   
   <select id="selectProductType" resultType="_int">
   		select product_type from product where product_no = #{productNo}
   </select>
   
   <select id="orderSearchCount" resultType="_int">
		SELECT count(*)
		FROM orders o
		LEFT JOIN food f ON o.product_no = f.product_no
		LEFT JOIN ingredient i ON o.product_no = i.product_no
		LEFT JOIN menu m ON o.product_no = m.product_no
		LEFT JOIN tool t ON o.product_no = t.product_no
		WHERE o.users_no = #{usersNo} AND (f.food_name LIKE '%${word}%' OR i.ingredient_name LIKE '%${word}%' OR m.menu_name LIKE '%${word}%' OR t.tool_name LIKE '%${word}%')
   </select>
   
   <select id="orderSearchList" resultType="map">
   		SELECT o.*, f.food_name, i.ingredient_name, m.menu_name, t.tool_name
		FROM orders o
		LEFT JOIN food f ON o.product_no = f.product_no
		LEFT JOIN ingredient i ON o.product_no = i.product_no
		LEFT JOIN menu m ON o.product_no = m.product_no
		LEFT JOIN tool t ON o.product_no = t.product_no
		WHERE o.users_no = #{usersNo} AND (f.food_name LIKE '%${word}%' OR i.ingredient_name LIKE '%${word}%' OR m.menu_name LIKE '%${word}%' OR t.tool_name LIKE '%${word}%')
		ORDER BY ORDER_NO DESC
   </select>
   
   <select id="orderPeriodSearchCount" resultType="_int">
   		<![CDATA[
	   		SELECT count(*)
			FROM orders o
			LEFT JOIN food f ON o.product_no = f.product_no
			LEFT JOIN ingredient i ON o.product_no = i.product_no
			LEFT JOIN menu m ON o.product_no = m.product_no
			LEFT JOIN tool t ON o.product_no = t.product_no
			WHERE o.users_no = #{usersNo}
			  AND (f.food_name LIKE '%${word}%' OR i.ingredient_name LIKE '%${word}%' OR m.menu_name LIKE '%${word}%' OR t.tool_name LIKE '%${word}%')
			  AND TRUNC(o.order_date) >= TO_DATE(#{start}, 'YYYY-MM-DD')
			  AND TRUNC(o.order_date) <= TO_DATE(#{end}, 'YYYY-MM-DD')
   		]]>
   </select>
   
   <select id="orderPeriodSearchList" resultType="map">
   		<![CDATA[
	   		SELECT o.*, f.food_name, i.ingredient_name, m.menu_name, t.tool_name
			FROM orders o
			LEFT JOIN food f ON o.product_no = f.product_no
			LEFT JOIN ingredient i ON o.product_no = i.product_no
			LEFT JOIN menu m ON o.product_no = m.product_no
			LEFT JOIN tool t ON o.product_no = t.product_no
			WHERE o.users_no = #{usersNo}
			  AND (f.food_name LIKE '%${word}%' OR i.ingredient_name LIKE '%${word}%' OR m.menu_name LIKE '%${word}%' OR t.tool_name LIKE '%${word}%')
			  AND TRUNC(o.order_date) >= TO_DATE(#{start}, 'YYYY-MM-DD')
			  AND TRUNC(o.order_date) <= TO_DATE(#{end}, 'YYYY-MM-DD')
			ORDER BY ORDER_NO DESC
   		]]>
   </select>
   
<!--    <select id="" resultType="map"> -->
<!--    SELECT o.*, f.food_name, i.ingredient_name, m.menu_name, t.tool_name -->
<!-- 	FROM orders o -->
<!-- 	LEFT JOIN food f ON o.product_no = f.product_no -->
<!-- 	LEFT JOIN ingredient i ON o.product_no = i.product_no -->
<!-- 	LEFT JOIN menu m ON o.product_no = m.product_no -->
<!-- 	LEFT JOIN tool t ON o.product_no = t.product_no -->
<!-- 	WHERE o.users_no = 23 -->
<!-- 	  AND (f.food_name LIKE '%펜%' OR i.ingredient_name LIKE '%펜%' OR m.menu_name LIKE '%펜%' OR t.tool_name LIKE '%펜%') -->
<!-- 	  AND TRUNC(o.order_date) >= TO_DATE('2023-05-30', 'YYYY-MM-DD') -->
<!-- 	  AND TRUNC(o.order_date) <= TO_DATE('2023-06-29', 'YYYY-MM-DD') -->
<!--   </select> -->

	<!-- 주문 번호에 대한 optionNo 조회 -->
	<select id="selectOptionInfo" resultMap="optionsList">
		SELECT *
		FROM cart c
		INNER JOIN options o ON c.PRODUCT_OPTION = o.option_No
		WHERE c.pre_order_No = #{preorderNo}
	</select>
	
	<insert id="updatePointTable">
		insert into point (POINT_NO,USERS_NO,POINT_TYPE,POINT_BEFORE,POINT_CHANGE,MODIFY_DATE )
		values(seq_point_no.nextval, #{usersNo}, #{pointType}, #{pointBefore}, #{pointChange}, sysdate )
	</insert>
	
	<insert	id="insertQna">
		insert into qna (qna_no, users_no, qna_date, qna_title, qna_content, answer_date, answer_content, qna_status, qna_type, product_no)
	    values (seq_qna_no.nextval, #{usersNo}, sysdate, #{qnaTitle}, #{qnaContent}, default, default, default, #{qnaType}, #{productNo})
	</insert>
	
	<select id="selectQnaList" resultMap="QnAResultSet">
		select *
		from qna join users using(users_no)
		where product_no=#{productNo} and qna_status = 'Y'
		order by qna_no desc
	</select>
	
	<select id="selectQnaCount" resultType="int">
		select count(*)
		from qna
		where product_no=#{productNo} and qna_status = 'Y'
	</select>
	
	<resultMap type="QA" id="QnAResultSet">
		<id column="QNA_NO" property="qnaNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="QNA_DATE" property="qnaDate"/>
		<result column="QNA_TITLE" property="qnaTitle"/>
		<result column="QNA_CONTENT" property="qnaContent"/>
		<result column="ADMIN_NO" property="adminNo"/>
		<result column="ANSWER_DATE" property="answerDate"/>
		<result column="ANSWER_CONTENT" property="answerContent"/>
		<result column="QNA_STATUS" property="qnaStatus"/>
		<result column="QNA_TYPE" property="qnaType"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="PRODUCTNO" property="productNo"/>
	</resultMap>
	
	<insert id="insertLike">
		insert into likes (LIKE_NO,USERS_NO,DIVISION_NO,NUMBER_TYPE )
		values(seq_like_no.nextval, #{usersNo}, #{divisionNo}, 2)
	</insert>
	
	<delete id="deleteLike">
		delete from likes
		where users_no=#{usersNo} and division_no=#{divisionNo}
	</delete>
	
	<select id="selectLike" resultType="java.lang.Integer">
		select count(*) from likes where users_no=#{usersNo} and division_no=#{divisionNo}
	</select>
	
	<select id="selectCart" resultMap="cartList">
		select *
		from (select * 
			  from cart
		 	  where users_no = #{usersNo}
		 	  order by cart_no desc)
		where rownum = 1
	</select>
	<select id="qnalist" resultMap="QnAResultSet">
		select *
		from qna join users using (users_no)
		where qna_no = #{qnaNo} and users_no = #{usersNo} and product_no=#{productNo} and qna_status='Y'
	</select>
	
	
	<!-- 상품 메인 창에서 카테고리 별 조회  -->
	<select id="selectViewWhole" resultMap="productList" >
		select * from product where product_type in (1,3,4) and product_status = 'Y' order by product_no desc
	</select>
	
	<select id="selectViewFood" resultMap="foodInfo" >
		select * from food order by product_no desc 
	</select>
	
<!-- 	<select id="selectViewMenu" resultMap="menuInfo" > -->
<!-- 		select * from menu -->
<!-- 	</select> -->
	
	<select id="selectViewIngredient" resultMap="ingredientInfo" >
		<![CDATA[
			select * from ingredient where is_accept = 'Y' and product_no <> 0 order by ingredient_no desc
		]]>
		
	</select>
	
	<select id="selectViewTool" resultMap="toolInfo" >
		select * 
        from tool t
        left join product p on (t.product_no = p.product_no)
        where p.product_status = 'Y' 
        order by p.product_no desc
	</select>
	
	<select id="selectViewWholeCount" resultType="_int">
		select count(*) from product where product_type in (1,3,4)
	</select>
	
	<select id="selectWholeHotDeal" resultMap="productList">
		select *
		from product
		where product_type in (1,3,4)
		order by product_sale desc, product_modify_date desc
		FETCH FIRST 8 ROWS ONLY
	</select>
	
	<select id="selectViewToolCount" resultType="_int">
		select count(*) from tool
	</select>
	
	<select id="selectDetailReview" resultType="map">
		select *
		from review
			 left join image on (review_no = image_divide_no)
		where review_no = #{reviewNo} and review_status = 'Y'
	</select>
	
	<select id="orderList" resultType="_integer">
		select count(*)
		from orders
		where product_no = #{productNo}	and users_no = nvl(#{usersNo}, -1)
	</select>
	
	<resultMap type="Orders" id="ordersResultSet">
    	<id column="ORDER_NO" property="orderNo"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="USERS_NO" property="usersNo"/>
		<result column="USERS_ID" property="usersId"/>
		<result column="PRODUCT_TYPE" property="productType"/>
		<result column="ORDER_COUNT" property="orderCount"/>
		<result column="ORDER_TOTAL_PRICE" property="totalPrice"/>
		<result column="ORDER_DATE" property="orderDate"/>
		<result column="ORDER_STATUS" property="orderStatus"/>
		<result column="ORDER_ADDRESS" property="orderAddress"/>
		<result column="ORDER_DELIVERY_DATE" property="orderDeliveryDate"/>
		<result column="ORDER_STOCK" property="orderStock"/>
		<result column="ORDER_DELIVERY_COMMENT" property="orderDeliveryComment"/>
		<result column="ORDER_INFO" property="orderInfo"/>
		<result column="SHIP_PRICE" property="shipPrice"/>
		<result column="OPTIONS" property="options"/>
   </resultMap>
   
	<select id="selectLikeOrderBy" resultType="map">
		<![CDATA[
			SELECT PRODUCT_NO, PRODUCT_PRICE, PRODUCT_SALE
	        FROM
	          (SELECT p.*, l.division_count
	           FROM product p
	           JOIN
	             (SELECT division_no, COUNT(*) AS division_count
	              FROM likes
	              GROUP BY division_no) l ON l.division_no = p.product_no)   
	        WHERE ROWNUM <= 8 and PRODUCT_STATUS = 'Y' and PRODUCT_TYPE <> 2
		]]>
	</select>
	
	<select id="selectViewFoodCount" resultType="_int">
		select count(*) from food
	</select>
	
	<select id="selectLikeOrderByFood" resultType="map">
		<![CDATA[
			SELECT p.PRODUCT_NO, p.PRODUCT_PRICE, p.PRODUCT_SALE, food_name
			FROM
			  (SELECT f.*, l.division_count
			   FROM food f
			   JOIN
			     (SELECT division_no, COUNT(*) AS division_count
			      FROM likes
			      GROUP BY division_no) l ON l.division_no = f.PRODUCT_NO
			    JOIN product p on (p.product_no = f.product_no)
			   WHERE p.PRODUCT_STATUS = 'Y'
			     AND p.PRODUCT_TYPE <> 2
			   ORDER BY l.division_count DESC
			   FETCH FIRST 8 ROWS ONLY) x
			JOIN product p ON x.PRODUCT_NO = p.PRODUCT_NO
		]]>
	</select>
	
	<select id="selectLikeOrderByTool" resultType="map">
		<![CDATA[
			SELECT p.PRODUCT_NO, p.PRODUCT_PRICE, p.PRODUCT_SALE, tool_name
			FROM
			  (SELECT t.*, l.division_count
			   FROM tool t
			   JOIN
			     (SELECT division_no, COUNT(*) AS division_count
			      FROM likes
			      GROUP BY division_no) l ON l.division_no = t.PRODUCT_NO
			    JOIN product p on (p.product_no = t.product_no)
			   WHERE p.PRODUCT_STATUS = 'Y'
			     AND p.PRODUCT_TYPE <> 2
			   ORDER BY l.division_count DESC
			   FETCH FIRST 8 ROWS ONLY) x
			JOIN product p ON x.PRODUCT_NO = p.PRODUCT_NO
		]]>
	</select>
	
	<select id="selectLikeOrderByIngre" resultType="map">
		<![CDATA[
			SELECT p.PRODUCT_NO, p.PRODUCT_PRICE, p.PRODUCT_SALE, ingredient_name
			FROM
			  (SELECT i.*, l.division_count
			   FROM ingredient i
			   JOIN
			     (SELECT division_no, COUNT(*) AS division_count
			      FROM likes
			      GROUP BY division_no) l ON l.division_no = i.PRODUCT_NO
			    JOIN product p on (p.product_no = i.product_no)
			   WHERE p.PRODUCT_STATUS = 'Y'
			     AND p.PRODUCT_TYPE <> 2
			   ORDER BY l.division_count DESC
			   FETCH FIRST 8 ROWS ONLY) x
			JOIN product p ON x.PRODUCT_NO = p.PRODUCT_NO
		]]>
	</select>
	
	<select id="selectPfood" resultMap="productList">
		select * from product where product_no = #{productNo}
	</select>
	
	<select id="selectFoodHotDeal" resultMap="productList">
		<![CDATA[
			select *
			from product
			where product_type = 1 AND product_sale <> '0'
			order by product_sale desc, product_modify_date desc
			FETCH FIRST 8 ROWS ONLY
		]]>
	</select>
	
	<select id="selectToolHotDeal" resultMap="productList">
		<![CDATA[
			select *
			from product
			where product_type = 4 AND product_sale <> '0' AND PRODUCT_STATUS = 'Y' 
			order by product_sale desc, product_modify_date desc
			FETCH FIRST 8 ROWS ONLY
		]]>
	</select>
	
	<select id="selectIngreHotDeal" resultMap="productList">
		<![CDATA[
			select *
			from product
			where product_type = 3 AND product_sale <> '0'
			order by product_sale desc, product_modify_date desc
			FETCH FIRST 8 ROWS ONLY
		]]>
	</select>
	
	<select id="selectViewIngreCount" resultType="_int">
		<![CDATA[
		select count(*) from ingredient where is_accept = 'Y' and product_no <> 0
		]]>
	</select>
	
<!-- 	<select id="selectPfood" resultMap="productList"> -->
<!-- 		select * from product where product_no = #{productNo} -->
<!-- 	</select> -->
	
	<select id="selectPIngre" resultMap="productList">
		select * from product where product_no = #{productNo}
	</select>
	
	<delete id="deleteImage">
		delete from image where image_renamename in
		<foreach collection="list" item="rename" open="(" separator="," close=")">
			#{rename}
		</foreach>
	</delete>
	
	<update id="updateReview">
		update review
		set review_content = #{reviewContent}, review_score = #{reviewScore}
		where review_no = #{reviewNo}
	</update>
	
	<update id="deleteReview">
		update review
		set review_status = 'N'
		where review_no = #{reviewNo}
	</update>

	<select id="selectFoodKindType" resultMap="foodInfo">
		select * from food where FOOD_TYPE = #{foodType} and FOOD_KIND = #{foodKind}
	</select>
	
	<select id="selectFoodKind" resultMap="foodInfo">
		select * from food where FOOD_KIND = #{foodKind}
	</select>
	
	<select id="selectFoodType" resultMap="foodInfo">
		select * from food where FOOD_TYPE = #{foodType}
	</select>
	
	<select id="selectFoodKindCount" resultType="_int">
		select count(*) from food where FOOD_KIND = #{foodKind}
	</select>
	
	<select id="selectFoodTypeCount" resultType="_int">
		select count(*) from food where FOOD_TYPE = #{foodType}
	</select>
	
	<select id="selectFoodKindTypeCount" resultType="_int">
		select count(*) from food where FOOD_KIND = #{foodKind} and FOOD_TYPE = #{foodType}
	</select>
	
	<select id="selectMealKit" resultType="map">
		SELECT p.product_no, p.product_price, p.product_sale, m.menu_name, f.food_name, i.image_renamename
		FROM product p
		LEFT JOIN menu m ON p.product_no = m.product_no
		LEFT JOIN food f ON p.product_no = f.product_no
		LEFT JOIN image i ON i.image_divide_no = p.product_no
		WHERE p.product_no IN (
		    SELECT product_no
		    FROM menu
		    WHERE menu_type = 2
		)
		OR p.product_no IN (
		    SELECT product_no
		    FROM food
		    WHERE food_type = 2
		)and i.image_level = 0
	</select>
	
	
<!-- 	<select id="selectLikeOrderByOne" resultType="map"> -->
<!-- 		<![CDATA[ -->
<!-- 			SELECT * -->
<!-- 			FROM ( -->
<!-- 			    SELECT p.product_price, p.product_sale, p.product_no, img.image_renamename, l.division_count, f.food_name, i.ingredient_name, t.tool_name, ROW_NUMBER() OVER (ORDER BY l.division_count DESC) AS row_num -->
<!-- 			    FROM product p -->
<!-- 			    LEFT JOIN ingredient i ON i.product_no = p.product_no -->
<!-- 			    LEFT JOIN food f ON f.product_no = p.product_no -->
<!-- 			    LEFT JOIN tool t ON t.product_no = p.product_no -->
<!-- 			    LEFT JOIN ( -->
<!-- 			        SELECT division_no, COUNT(*) AS division_count -->
<!-- 			        FROM likes -->
<!-- 			        GROUP BY division_no -->
<!-- 			    ) l ON l.division_no = p.product_no -->
<!-- 			    LEFT JOIN image img ON p.product_no = img.image_divide_no -->
<!-- 			    WHERE p.product_type IN (1, 3, 4) -->
<!-- 			    AND l.division_count IS NOT NULL  -->
<!-- 			    AND l.division_count <> 0 -->
<!-- 			    AND img.image_level = 0 -->
<!-- 			    ORDER BY l.division_count DESC -->
<!-- 			) subquery -->
<!-- 			WHERE row_num BETWEEN 0 AND 4 -->
<!-- 		]]> -->
<!-- 	</select>  -->
	
<!--상품 검색용 맵퍼 -->
	<select id="selectViewSearchCount" resultType="_int">
		select count(*) from product 
		<if test='searchType == "food"'>
			 join food using(product_no)
		where food_name like '%${searchText}%'
		</if>
		<if test='searchType == "ingredient"'>
			 join ingredient using(product_no)
		where ingredient_name like '%${searchText}%'
		</if>
		<if test='searchType == "tool"'>
			 join tool using(product_no)
		where tool_name like '%${searchText}%'
		</if>
	</select>
	<select id="selectViewSearch" resultMap="productList" >
		select * from product
		<if test='searchType == "food"'>
			 join food using(product_no)
		where food_name like '%${searchText}%'
		</if>
		<if test='searchType == "ingredient"'>
			 join ingredient using(product_no)
		where ingredient_name like '%${searchText}%'
		</if>
		<if test='searchType == "tool"'>
			 join tool using(product_no)
		where tool_name like '%${searchText}%'
		</if>
	</select>
	
	<select id="selReviewCount" resultType="_int">
		select count(*) from review where product_no = #{productNo} and review_writer = #{nickName}
	</select>
	   <insert id="goToPay">
      <if test="preorderNo == 0">
         insert all 
         into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption}, #{cartCount}, seq_pre_no.nextval)
           into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption2}, #{cartCount}, seq_pre_no.currval)
           select * from dual
      </if>
      <selectKey keyProperty="preorderNo" resultType="int" order="AFTER" >
         select seq_pre_no.currval from dual
      </selectKey>
        <if test="preorderNo != 0">
           insert all 
         into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption}, #{cartCount}, #{preorderNo})
           into cart values (get_cart, #{usersNo}, #{productNo}, #{productOption2}, #{cartCount}, #{preorderNo})
           select * from dual
        </if>   
   </insert>
	
	<update id="updateCartCount">
		update cart
		set cart_count = #{size} 
		where pre_order_no = #{preorderNo}
	</update>
	
	<select id="isAdmin" resultType="string">
		select is_admin
		from users
		where users_no = #{uNo}
	</select>
	
	<update id="updateCount">
		update product
		set product_count = product_count + 1
        where product_no = #{pNo}
	</update>
	
</mapper>